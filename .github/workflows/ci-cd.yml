name: CI/CD Pipeline

# Trigger the workflow on push to the main branch or pull request
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Jobs to run
jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Check out the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'  # Replace with your Python version

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Run tests
      - name: Run tests
        run: |
          python manage.py test

  build:
    runs-on: ubuntu-latest
    needs: test  # Ensure tests pass before building

    steps:
      # Check out the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js for frontend (if applicable)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # Replace with your Node.js version

      # Install frontend dependencies
      - name: Install frontend dependencies
        run: |
          cd frontend  # Replace with your frontend directory
          npm install

      # Build the frontend
      - name: Build frontend
        run: |
          cd frontend  # Replace with your frontend directory
          npm run build

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Ensure build succeeds before deploying

    steps:
      # Check out the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Deploy to Heroku (example)
      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
